[{"c:\\N3652\\web_ohjelmointi\\webharkka\\src\\index.js":"1","c:\\N3652\\web_ohjelmointi\\webharkka\\src\\App.js":"2","c:\\N3652\\web_ohjelmointi\\webharkka\\src\\components\\Canvas.js":"3","c:\\N3652\\web_ohjelmointi\\webharkka\\src\\components\\Button.js":"4","c:\\N3652\\web_ohjelmointi\\webharkka\\src\\components\\Draw.js":"5"},{"size":219,"mtime":1607111967974,"results":"6","hashOfConfig":"7"},{"size":344,"mtime":1607157736519,"results":"8","hashOfConfig":"7"},{"size":1315,"mtime":1607156396849,"results":"9","hashOfConfig":"7"},{"size":242,"mtime":1607157819588,"results":"10","hashOfConfig":"7"},{"size":3069,"mtime":1607165024938,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"nhn6tr",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c:\\N3652\\web_ohjelmointi\\webharkka\\src\\index.js",[],["25","26"],"c:\\N3652\\web_ohjelmointi\\webharkka\\src\\App.js",["27"],"import './App.css';\nimport React, { useState } from 'react'\nimport Canvas from './components/Canvas'\nimport Button from './components/Button'\n\nfunction App() {\n\n  function refreshPage() {\n    window.location.reload(false);\n}\n\n  return (\n    <>\n      <Button handleOnClick={refreshPage} />,\n      <Canvas  />\n    </>\n  );\n}\n\nexport default App;\n","c:\\N3652\\web_ohjelmointi\\webharkka\\src\\components\\Canvas.js",["28"],"import React, { useRef, useEffect } from 'react'\r\nimport {drawStick, drawBall} from './Draw'\r\n \r\nconst Canvas = props => {\r\n  \r\n  const canvasRef = useRef(null)\r\n  \r\n  const draw = (ctx, position, ctx2) => {    \r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\r\n    \r\n    drawStick(ctx2, 80, 30, 15, 0);  \r\n    drawStick(ctx2, 200, 30, 15, 0);\r\n    drawStick(ctx2, 20, 85, 15, 0);  \r\n    drawStick(ctx2, 140, 85, 15, 0);\r\n    drawStick(ctx2, 260, 85, 15, 0);  \r\n    drawStick(ctx2, 80, 140, 15, 0);\r\n    drawStick(ctx2, 200, 140, 15, 0);  \r\n    drawStick(ctx2, 20, 195, 15, 0);\r\n    drawStick(ctx2, 140, 195, 15, 0);  \r\n    drawStick(ctx2, 260, 195, 15, 0);   \r\n\r\n    drawBall(ctx, position)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    \r\n    const canvas = canvasRef.current\r\n    const context = canvas.getContext('2d')\r\n    const context2 = canvas.getContext('2d')\r\n    let ballposition = 0;\r\n    let animationFrameId\r\n\r\n    const render = () => {\r\n      ballposition++      \r\n      draw(context, ballposition, context2)\r\n      animationFrameId = window.requestAnimationFrame(render)\r\n    \r\n}\r\n    render()\r\n    \r\n    return () => {\r\n      window.cancelAnimationFrame(animationFrameId)\r\n    }\r\n  }, [draw])\r\n  \r\n  return <canvas width=\"280\" height=\"300\" ref={canvasRef} {...props}/>\r\n}\r\n\r\nexport default Canvas","c:\\N3652\\web_ohjelmointi\\webharkka\\src\\components\\Button.js",[],"c:\\N3652\\web_ohjelmointi\\webharkka\\src\\components\\Draw.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":2,"column":17,"nodeType":"35","messageId":"36","endLine":2,"endColumn":25},{"ruleId":"37","severity":1,"message":"38","line":8,"column":9,"nodeType":"39","endLine":23,"endColumn":4},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","The 'draw' function makes the dependencies of useEffect Hook (at line 44) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'draw' in its own useCallback() Hook.","VariableDeclarator","no-global-assign","no-unsafe-negation"]